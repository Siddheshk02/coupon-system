openapi: 3.0.3
info:
  title: Coupon System API
  version: "1.0"
  description: |
    Backend API for a medicine ordering platform's coupon system MVP.

servers:
  - url: http://localhost:8080

paths:
  /admin/coupons:
    post:
      summary: Create a new coupon (Admin)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
      responses:
        '201':
          description: Coupon created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid request
        '500':
          description: Server error

  /coupons:
    get:
      summary: Get all coupons
      responses:
        '200':
          description: List of coupons
          content:
            application/json:
              schema:
                type: object
                properties:
                  coupons:
                    type: array
                    items:
                      $ref: '#/components/schemas/Coupon'

  /coupons/applicable:
    get:
      summary: Get applicable coupons for a cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponValidateRequest'
      responses:
        '200':
          description: List of applicable coupons
          content:
            application/json:
              schema:
                type: object
                properties:
                  applicable_coupons:
                    type: array
                    items:
                      $ref: '#/components/schemas/CouponResult'
        '400':
          description: Invalid request
        '500':
          description: Server error

  /coupons/validate:
    post:
      summary: Validate a coupon for a cart/order
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          required: true
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponRequest'
      responses:
        '200':
          description: Coupon validation result
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ValidateSuccess'
                  - $ref: '#/components/schemas/ValidateFailure'
        '400':
          description: Invalid request
        '500':
          description: Server error

  /items:
    post:
      summary: Add a new item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddItem'
      responses:
        '201':
          description: Item added
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid request
        '500':
          description: Server error
    get:
      summary: Get items
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: false
        - in: query
          name: category
          schema:
            type: string
          required: false
      responses:
        '200':
          description: List of items
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Item'

  /createorder:
    post:
      summary: Place an order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order placed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid request
        '500':
          description: Server error

  /users:
    post:
      summary: User login (creates user if not exists)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  message:
                    type: string
        '400':
          description: Invalid request
        '500':
          description: Server error

components:
  schemas:
    Coupon:
      type: object
      properties:
        coupon_code:
          type: string
        expiry_date:
          type: string
          format: date-time
        usage_type:
          type: string
          enum: [one-time, multi-use, time-based]
        applicable_categories:
          type: array
          items:
            type: string
        min_order_value:
          type: number
        discount_type:
          type: string
          enum: [fixed, percentage]
        discount_value:
          type: number
        max_usage_per_user:
          type: integer

    CouponRequest:
      type: object
      properties:
        cart_items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        order_total:
          type: number
        timestamp:
          type: string
          format: date-time
        coupon_code:
          type: string

    CouponValidateRequest:
      type: object
      properties:
        cart_items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        order_total:
          type: number
        timestamp:
          type: string
          format: date-time

    CartItem:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        price:
          type: number

    CouponResult:
      type: object
      properties:
        coupon_code:
          type: string
        discount_value:
          type: string

    ValidateSuccess:
      type: object
      properties:
        is_valid:
          type: boolean
          example: true
        discount:
          type: object
          properties:
            items_discount:
              type: number
            charges_discount:
              type: number
        message:
          type: string

    ValidateFailure:
      type: object
      properties:
        is_valid:
          type: boolean
          example: false
        reason:
          type: string

    AddItem:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        price:
          type: number

    Item:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
        price:
          type: number

    Order:
      type: object
      properties:
        user_id:
          type: integer
        order_status:
          type: string
        ordered_at:
          type: string
          format: date-time
        coupon_code_used:
          type: string
        amount_paid:
          type: number

    User:
      type: object
      properties:
        name:
          type: string
        password:
          type: string